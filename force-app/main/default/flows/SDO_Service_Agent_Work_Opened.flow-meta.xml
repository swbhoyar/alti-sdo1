<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>Set_Case_Id_to_WorkItem</name>
        <label>Set Case Id to WorkItem</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <assignmentItems>
            <assignToReference>CaseId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.WorkItemId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Case_Id</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Case_Id</name>
        <label>Check Case Id</label>
        <locationX>578</locationX>
        <locationY>791</locationY>
        <defaultConnectorLabel>No Case Associated</defaultConnectorLabel>
        <rules>
            <name>Case_ID_set</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Status_and_Owner</targetReference>
            </connector>
            <label>Case ID set</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Work_Type</name>
        <label>Check Work Type</label>
        <locationX>578</locationX>
        <locationY>455</locationY>
        <defaultConnectorLabel>Other</defaultConnectorLabel>
        <rules>
            <name>Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WorkItemId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Case_Id_to_WorkItem</targetReference>
            </connector>
            <label>Case</label>
        </rules>
        <rules>
            <name>Chat_Transcript</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WorkItemId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>570</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Id_from_Transcript</targetReference>
            </connector>
            <label>Chat Transcript</label>
        </rules>
        <rules>
            <name>Messaging_Session</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WorkItemId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>0Mw</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Id_from_Messaging_Session</targetReference>
            </connector>
            <label>Messaging Session</label>
        </rules>
        <rules>
            <name>Voice_Call</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WorkItemId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>0LQ</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Id_from_Voice_Call</targetReference>
            </connector>
            <label>Voice Call</label>
        </rules>
    </decisions>
    <decisions>
        <description>used to evaluate the custom setting record to see if there is a custom setting record activated before moving forward</description>
        <name>Evaluate_process_automation_settings</name>
        <label>Evaluate process automation settings</label>
        <locationX>974</locationX>
        <locationY>335</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Fire_Process_Automation_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Setup.xDO_Tool_ProcessAutomationSwitch__c.xDO_Tool_ProcessAutomation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Work_Type</targetReference>
            </connector>
            <label>Fire Process Automation = True</label>
        </rules>
    </decisions>
    <description>Called when work is accepted in Omni Channel - will update the case record that is related to the work (if there is one).</description>
    <interviewLabel>SDO {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SDO Service - Agent Work - Opened</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Case_Id_from_Messaging_Session</name>
        <label>Get Case Id from Messaging Session</label>
        <locationX>578</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Case_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkItemId</elementReference>
            </value>
        </filters>
        <object>MessagingSession</object>
        <outputAssignments>
            <assignToReference>CaseId</assignToReference>
            <field>CaseId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Case_Id_from_Transcript</name>
        <label>Get Case Id from Transcript</label>
        <locationX>314</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Case_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkItemId</elementReference>
            </value>
        </filters>
        <object>LiveChatTranscript</object>
        <outputAssignments>
            <assignToReference>CaseId</assignToReference>
            <field>CaseId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Case_Id_from_Voice_Call</name>
        <label>Get Case Id from Voice Call</label>
        <locationX>842</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Case_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkItemId</elementReference>
            </value>
        </filters>
        <object>VoiceCall</object>
        <outputAssignments>
            <assignToReference>CaseId</assignToReference>
            <field>RelatedRecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Status_and_Owner</name>
        <label>Update Case Status and Owner</label>
        <locationX>446</locationX>
        <locationY>911</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.UserId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Working</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>848</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Evaluate_process_automation_settings</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Opened</stringValue>
            </value>
        </filters>
        <object>AgentWork</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
