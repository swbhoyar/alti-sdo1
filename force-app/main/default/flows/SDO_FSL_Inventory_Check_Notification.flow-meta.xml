<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Inventory_Push_Notification</name>
        <label>Send Inventory Push Notification</label>
        <locationX>82</locationX>
        <locationY>451</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Custom_Notification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>varMissingProductsMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Inventory Missing</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>UserIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderId</name>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>Get_Service_Appointment.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>Add_RUserId_to_UserIds</name>
        <label>Add RUserId to UserIds</label>
        <locationX>349</locationX>
        <locationY>439</locationY>
        <assignmentItems>
            <assignToReference>UserIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>RUserId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Custom_Notification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Product_Found_to_False</name>
        <label>Set Product Found to False</label>
        <locationX>1177</locationX>
        <locationY>260</locationY>
        <assignmentItems>
            <assignToReference>varProductFound</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Product_Items</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>\n{!Loop_through_Products_Required.ProductName}: {!Loop_through_Products_Required.QuantityRequired} ✅</description>
        <name>Update_message_available</name>
        <label>Update message: available</label>
        <locationX>1476</locationX>
        <locationY>569</locationY>
        <assignmentItems>
            <assignToReference>varAvailableProducts</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>\n{!Loop_through_Products_Required.ProductName}: {!Loop_through_Products_Required.QuantityRequired} ✅</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varProductFound</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Product_Items</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_message_insufficient</name>
        <label>Update message: insufficient</label>
        <locationX>1469</locationX>
        <locationY>277</locationY>
        <assignmentItems>
            <assignToReference>varMissingProducts</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>\n{!Loop_through_Products_Required.ProductName}: {!Loop_through_Product_Items.QuantityOnHand}/{!Loop_through_Products_Required.QuantityRequired} ⚠️</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varProductFound</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varMissingProductsMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>{!Loop_through_Products_Required.ProductName}: {!Loop_through_Product_Items.QuantityOnHand}/{!Loop_through_Products_Required.QuantityRequired} ⚠️</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Product_Items</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_message_missing</name>
        <label>Update message: missing</label>
        <locationX>1099</locationX>
        <locationY>436</locationY>
        <assignmentItems>
            <assignToReference>varMissingProducts</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>\n{!Loop_through_Products_Required.ProductName}: 0/{!Loop_through_Products_Required.QuantityRequired} ⚠️</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varMissingProductsMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>{!Loop_through_Products_Required.ProductName}: 0/{!Loop_through_Products_Required.QuantityRequired} ⚠️</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Products_Required</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Compare_Product_Quantity</name>
        <label>Compare Product &amp; Quantity</label>
        <locationX>1714</locationX>
        <locationY>444</locationY>
        <defaultConnector>
            <targetReference>Update_message_insufficient</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Insufficient Quantity</defaultConnectorLabel>
        <rules>
            <name>Not_the_same_product</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_Product_Items.Product2Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Loop_through_Products_Required.Product2Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_through_Product_Items</targetReference>
            </connector>
            <label>Not the same product</label>
        </rules>
        <rules>
            <name>Sufficient_quantity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_Product_Items.QuantityOnHand</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Loop_through_Products_Required.QuantityRequired</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_message_available</targetReference>
            </connector>
            <label>Sufficient quantity</label>
        </rules>
    </decisions>
    <decisions>
        <name>Location_Products_Required_Check</name>
        <label>Location &amp; Products Required Check</label>
        <locationX>740</locationX>
        <locationY>166</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Both_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Products_Required</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ServiceResource.LocationId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Product_Items</targetReference>
            </connector>
            <label>Both Exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Missing_Products</name>
        <label>Missing Products?</label>
        <locationX>516</locationX>
        <locationY>374</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Products_are_Missing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varMissingProducts</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Service_Resource</targetReference>
            </connector>
            <label>Products are Missing</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_product_found</name>
        <label>Was product found?</label>
        <locationX>976</locationX>
        <locationY>679</locationY>
        <defaultConnector>
            <targetReference>Update_message_missing</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No, not found</defaultConnectorLabel>
        <rules>
            <name>Yes_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varProductFound</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_through_Products_Required</targetReference>
            </connector>
            <label>Yes, found</label>
        </rules>
    </decisions>
    <interviewLabel>SFS Inventory Check Notification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SFS Inventory Check Notification</label>
    <loops>
        <name>Loop_through_Product_Items</name>
        <label>Loop through Product Items</label>
        <locationX>1329</locationX>
        <locationY>436</locationY>
        <collectionReference>Get_Product_Items</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Compare_Product_Quantity</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Was_product_found</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_through_Products_Required</name>
        <label>Loop through Products Required</label>
        <locationX>996</locationX>
        <locationY>343</locationY>
        <collectionReference>Get_Products_Required</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Set_Product_Found_to_False</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Work_Order</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Custom_Notification</name>
        <label>Get Custom Notification</label>
        <locationX>218</locationX>
        <locationY>376</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Inventory_Push_Notification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SDO_SFS_Inventory_Check_Notification</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Product_Items</name>
        <label>Get Product Items</label>
        <locationX>917</locationX>
        <locationY>122</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_Products_Required</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>LocationId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceResource.LocationId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ProductItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Products_Required</name>
        <label>Get Products Required</label>
        <locationX>596</locationX>
        <locationY>122</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Location_Products_Required_Check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentRecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Service_Appointment.ParentRecordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ProductRequired</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Service_Appointment</name>
        <label>Get Service Appointment</label>
        <locationX>452</locationX>
        <locationY>178</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Products_Required</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceAppointmentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceAppointment</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>ParentRecordId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Service_Resource</name>
        <label>Get Service Resource</label>
        <locationX>456</locationX>
        <locationY>580</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_RUserId_to_UserIds</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceResourceId</elementReference>
            </value>
        </filters>
        <object>ServiceResource</object>
        <outputAssignments>
            <assignToReference>RUserId</assignToReference>
            <field>RelatedRecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Update_Work_Order</name>
        <label>Update Work Order</label>
        <locationX>656</locationX>
        <locationY>438</locationY>
        <connector>
            <targetReference>Missing_Products</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Service_Appointment.ParentRecordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Inventory_Check__c</field>
            <value>
                <elementReference>FinalOutput</elementReference>
            </value>
        </inputAssignments>
        <object>WorkOrder</object>
    </recordUpdates>
    <start>
        <locationX>23</locationX>
        <locationY>41</locationY>
        <connector>
            <targetReference>Get_Service_Appointment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>AssignedResource</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <textTemplates>
        <name>FinalOutput</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Available Products:
{!varAvailableProducts}
\n\n
Insufficient Products:
{!varMissingProducts}</text>
    </textTemplates>
    <variables>
        <name>RUserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>UserIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varAvailableProducts</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varMissingProducts</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varMissingProductsMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varProductFound</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
