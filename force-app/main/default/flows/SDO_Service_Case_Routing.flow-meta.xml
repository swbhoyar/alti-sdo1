<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <decisions>
        <name>Case_Category</name>
        <label>Case Category</label>
        <locationX>842</locationX>
        <locationY>158</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Get_General_Queue_Id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Don_t_Route_Channels</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Chat</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Text</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Phone</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Facebook</stringValue>
                </rightValue>
            </conditions>
            <label>Don&apos;t Route Channels</label>
        </rules>
        <rules>
            <name>High_Priority</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>High</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Critical</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Escalated</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Priority_Queue_Id</targetReference>
            </connector>
            <label>High Priority</label>
        </rules>
        <rules>
            <name>Battery</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Record.Product_Family_KB__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Battery</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Battery_Queue_Id</targetReference>
            </connector>
            <label>Battery</label>
        </rules>
        <rules>
            <name>Billing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Record.SDO_Sub_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Billing</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Billing_Queue_Id</targetReference>
            </connector>
            <label>Billing</label>
        </rules>
        <rules>
            <name>Turbine</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Record.Product_Family_KB__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Turbine</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Turbine_Queue_Id</targetReference>
            </connector>
            <label>Turbine</label>
        </rules>
        <rules>
            <name>Social</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Facebook</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Twitter</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Google</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Instagram</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LinkedIn</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Social_Queue_Id</targetReference>
            </connector>
            <label>Social</label>
        </rules>
        <rules>
            <name>Community</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Community</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_General_Queue_Id</targetReference>
            </connector>
            <label>Community</label>
        </rules>
        <rules>
            <name>Low_Priority</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Low</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Get_General_Queue_Id</targetReference>
            </connector>
            <label>Low Priority</label>
        </rules>
    </decisions>
    <description>Used for the routing of cases for any case based work (Email, Web-to-Case, Social). Individual channels (Chat, SMS, Voice) use their own routing.</description>
    <interviewLabel>SDO Service - Case - Routing {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SDO Service - Case - Routing</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>RoutingFlow</processType>
    <recordLookups>
        <name>Get_Battery_Queue_Id</name>
        <label>Get Battery Queue Id</label>
        <locationX>314</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Case_Owner_to_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Billing</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>SDO_Service</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>SelectedQueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Billing_Queue_Id</name>
        <label>Get Billing Queue Id</label>
        <locationX>578</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Case_Owner_to_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>SDO_Service</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Billing</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>SelectedQueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_General_Queue_Id</name>
        <label>Get General Queue Id</label>
        <locationX>1370</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Case_Owner_to_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>General</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>SDO_Service</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>SelectedQueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Priority_Queue_Id</name>
        <label>Get Priority Queue Id</label>
        <locationX>50</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Case_Owner_to_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Priority</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>SDO_Service</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>SelectedQueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Social_Queue_Id</name>
        <label>Get Social Queue Id</label>
        <locationX>1106</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Case_Owner_to_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Social</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>SDO_Service</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>SelectedQueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Turbine_Queue_Id</name>
        <label>Get Turbine Queue Id</label>
        <locationX>842</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Case_Owner_to_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>SDO_Service</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Turbine</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>SelectedQueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <description>We can&apos;t use the Omni Route Work action here yet because it doesn&apos;t survive trailforcing correctly.
Also - the screen-pop part of it doesn&apos;t work yet for queue based work.</description>
        <name>Set_Case_Owner_to_Queue</name>
        <label>Set Case Owner to Queue</label>
        <locationX>842</locationX>
        <locationY>494</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SelectedQueueId</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <start>
        <locationX>716</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Case_Category</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>Record</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SelectedQueueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>skillRequirements</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>SkillRequirement</objectType>
    </variables>
</Flow>
