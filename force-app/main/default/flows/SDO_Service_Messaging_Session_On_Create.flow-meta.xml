<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <decisions>
        <description>What type of Messaging Session is this?</description>
        <name>Check_Origin</name>
        <label>Check Origin</label>
        <locationX>446</locationX>
        <locationY>528</locationY>
        <defaultConnectorLabel>Other Origin</defaultConnectorLabel>
        <rules>
            <name>Is_Inbound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>InboundInitiated</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Message</targetReference>
            </connector>
            <label>Is Inbound</label>
        </rules>
        <rules>
            <name>Triggered_Outbound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TriggeredOutbound</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_User</targetReference>
            </connector>
            <label>Triggered Outbound</label>
        </rules>
    </decisions>
    <decisions>
        <description>For triggered outbound the User doesn&apos;t fire the record triggered flow to search for related records, so do it here</description>
        <name>Check_User</name>
        <label>Check User</label>
        <locationX>446</locationX>
        <locationY>648</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_association</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Messaging_User.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Messaging_User.SDO_Service_Lead__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Messaging_User.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Search_for_Associations</targetReference>
            </connector>
            <label>No association</label>
        </rules>
    </decisions>
    <decisions>
        <description>used to evaluate the custom setting record to see if there is a custom setting record activated before moving forward</description>
        <name>Evaluate_process_automation_settings</name>
        <label>Evaluate process automation settings</label>
        <locationX>776</locationX>
        <locationY>288</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Fire_Process_Automation_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Setup.xDO_Tool_ProcessAutomationSwitch__c.xDO_Tool_ProcessAutomation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Messaging_User</targetReference>
            </connector>
            <label>Fire Process Automation = True</label>
        </rules>
    </decisions>
    <description>Runs when a new messaging session is created - i.e. an inbound message comes in or an outbound message is triggered out.</description>
    <formulas>
        <description>Sets the case subject - this will be displayed in Omni channel, unless you are already available when the SMS comes in, then it&apos;ll use the default value of &apos;Incident Support Conversation&apos; set on the Formula Field of Subject__c on Messaging Session due to a timing issue.</description>
        <name>CaseSubject</name>
        <dataType>String</dataType>
        <expression>&apos;Support &apos; + TEXT({!$Record.MessagingChannel.MessageType}) + &apos; Conversation&apos; +
IF(ISBLANK({!Get_Contact.Name}), &apos;&apos;, &apos; with &apos; + {!Get_Contact.Name})</expression>
    </formulas>
    <interviewLabel>SDO Service - Messaging Session - On Create {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SDO Service - Messaging Session - On Create</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Contact</name>
        <label>Get Contact</label>
        <locationX>50</locationX>
        <locationY>768</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Messaging_User.ContactId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This needs to run on the Asynchronous path as the ConversationEntry is in the DB before the Messaging Session is saved.</description>
        <name>Get_Message</name>
        <label>Get Message</label>
        <locationX>50</locationX>
        <locationY>648</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ConversationId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ConversationEntry</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Messaging_User</name>
        <label>Get Messaging User</label>
        <locationX>446</locationX>
        <locationY>408</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Origin</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.MessagingEndUserId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>MessagingEndUser</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Save_Messaging_User</name>
        <label>Save Messaging User</label>
        <locationX>314</locationX>
        <locationY>888</locationY>
        <inputReference>Get_Messaging_User</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Set_Case_Id</name>
        <label>Set Case Id</label>
        <locationX>50</locationX>
        <locationY>1008</locationY>
        <inputAssignments>
            <field>CaseId</field>
            <value>
                <elementReference>Create_Case.NewCaseId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>155</locationX>
        <locationY>0</locationY>
        <object>MessagingSession</object>
        <recordTriggerType>Create</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>Evaluate_process_automation_settings</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Create_Case</name>
        <label>Create Case</label>
        <locationX>50</locationX>
        <locationY>888</locationY>
        <connector>
            <targetReference>Set_Case_Id</targetReference>
        </connector>
        <flowName>SDO_Service_Create_Case_for_Channel</flowName>
        <inputAssignments>
            <name>ContactId</name>
            <value>
                <elementReference>Get_Messaging_User.ContactId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Description</name>
            <value>
                <elementReference>Get_Message.Message</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Origin</name>
            <value>
                <elementReference>$Record.ChannelType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>recordToAssociateTo</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Subject</name>
            <value>
                <elementReference>CaseSubject</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Search_for_Associations</name>
        <label>Search for Associations</label>
        <locationX>314</locationX>
        <locationY>768</locationY>
        <connector>
            <targetReference>Save_Messaging_User</targetReference>
        </connector>
        <flowName>SDO_Service_Phone_Number_Search</flowName>
        <inputAssignments>
            <name>NumberToSearchWith</name>
            <value>
                <elementReference>Get_Messaging_User.MessagingPlatformKey</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>Get_Messaging_User.AccountId</assignToReference>
            <name>MatchedAccountId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>Get_Messaging_User.ContactId</assignToReference>
            <name>MatchedContactId</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>Get_Messaging_User.SDO_Service_Lead__c</assignToReference>
            <name>MatchedLeadId</name>
        </outputAssignments>
    </subflows>
</Flow>
