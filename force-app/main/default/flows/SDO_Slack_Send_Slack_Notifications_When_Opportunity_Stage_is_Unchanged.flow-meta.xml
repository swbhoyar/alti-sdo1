<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Sends a Slack notification to the user who owns the current opportunity with the  outdated stage.</description>
        <name>SendStageNotifications</name>
        <label>Send Stage Notifications</label>
        <locationX>396</locationX>
        <locationY>1092</locationY>
        <actionName>stage_reminder</actionName>
        <actionType>sendNotification</actionType>
        <connector>
            <targetReference>IterateOverOpportunities</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>IterateOverOpportunities.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>RecipientIds</elementReference>
            </value>
        </inputParameters>
        <nameSegment>stage_reminder</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <description>Adds the opportunity owner ID to the RecipientIds collection variable and increases the value of the LoopCounter variable by 1.</description>
        <name>AddRecipientAndIncrementLoopCounter</name>
        <label>Add Recipient and Increment LoopCounter</label>
        <locationX>396</locationX>
        <locationY>984</locationY>
        <assignmentItems>
            <assignToReference>RecipientIds</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>RecipientIds</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecipientIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverOpportunities.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>LoopCounter</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendStageNotifications</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Resets the value of the LoopCounter variable to 0.</description>
        <name>ResetLoopCounter</name>
        <label>Reset Loop Counter</label>
        <locationX>264</locationX>
        <locationY>792</locationY>
        <assignmentItems>
            <assignToReference>LoopCounter</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddRecipientAndIncrementLoopCounter</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the StageLastChanged to the date at runtime less DaysAfterLastChange. Sets DayAfterStageLastChanged to the day after StageLastChanged. Sets the LoopCounter variable to 0.</description>
        <name>SetStageAndLoopCounterVariables</name>
        <label>Set Stage and LoopCounter Variables</label>
        <locationX>176</locationX>
        <locationY>252</locationY>
        <assignmentItems>
            <assignToReference>StageLastChanged</assignToReference>
            <operator>Subtract</operator>
            <value>
                <elementReference>DaysAfterLastChange</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>DayAfterStageLastChanged</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StageLastChanged</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>DayAfterStageLastChanged</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>LoopCounter</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetOpportunities</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <description>Filter opportunities from GetOpportunities that have active opportunity owners.</description>
        <name>FilterOpportunitiesActiveOwner</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filter Opportunities with Active Owner</label>
        <locationX>176</locationX>
        <locationY>468</locationY>
        <assignNextValueToReference>currentItem_FilterOpportunitiesActiveOwner</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>GetOpportunities</collectionReference>
        <conditionLogic>formula_evaluates_to_true</conditionLogic>
        <connector>
            <targetReference>IterateOverOpportunities</targetReference>
        </connector>
        <formula>{!currentItem_FilterOpportunitiesActiveOwner.Owner.IsActive}</formula>
    </collectionProcessors>
    <environments>Default</environments>
    <interviewLabel>Send Slack Notifications When Opportunity Stage is Unchanged {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Send Slack Notifications When Opportunity Stage is Unchanged</label>
    <loops>
        <description>Repeats actions in the loop for the Opportunities from GetOpportunities record collection. Identifies record owners and sends Slack notifications.</description>
        <name>IterateOverOpportunities</name>
        <label>Iterate Through Opportunities</label>
        <locationX>176</locationX>
        <locationY>576</locationY>
        <collectionReference>FilterOpportunitiesActiveOwner</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>PauseFlowStageUnchanged</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets the opportunities with a stage that hasn&apos;t been updated within the number of days specified by DayAfterStageLastChanged and stores the results in the Opportunities from GetOpportunities record collection.</description>
        <name>GetOpportunities</name>
        <label>Get Opportunities</label>
        <locationX>176</locationX>
        <locationY>360</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>FilterOpportunitiesActiveOwner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>LastStageChangeDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>StageLastChanged</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastStageChangeDate</field>
            <operator>LessThan</operator>
            <value>
                <elementReference>DayAfterStageLastChanged</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <sourceTemplate>sales_channel__OpptyStageNotChgNotif</sourceTemplate>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>SetStageAndLoopCounterVariables</targetReference>
        </connector>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2021-12-22</startDate>
            <startTime>07:01:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>currentItem_FilterOpportunitiesActiveOwner</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <description>Stores the date for the day after StageLastChanged. If no change has been made to the stage between the last change and this date, the owner is to be notified.</description>
        <name>DayAfterStageLastChanged</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Flow.CurrentDate</elementReference>
        </value>
    </variables>
    <variables>
        <description>Stores the number of days that can elapse after the last change was made to an opportunity record before the next notification is sent. To notify record owners earlier or later, change this value.</description>
        <name>DaysAfterLastChange</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>30.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the number of iterations executed in a loop.</description>
        <name>LoopCounter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores IDs of recipients to receive notifications for an opportunity with an outdated stage.</description>
        <name>RecipientIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Initially set to today&apos;s date, and updated to the last date that an opportunity&apos;s Stage field was changed.</description>
        <name>StageLastChanged</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Flow.CurrentDate</elementReference>
        </value>
    </variables>
    <waits>
        <description>Pauses the flow when the value of the LoopCounter variable is greater than 99.</description>
        <name>PauseFlowStageUnchanged</name>
        <label>Pause Flow</label>
        <locationX>396</locationX>
        <locationY>684</locationY>
        <defaultConnector>
            <targetReference>AddRecipientAndIncrementLoopCounter</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>LoopCounter Less Than 100 (Default)</defaultConnectorLabel>
        <waitEvents>
            <name>LoopCounterExceeds99</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>LoopCounter</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>99.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ResetLoopCounter</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>$Flow.CurrentDateTime</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Hours</stringValue>
                </value>
            </inputParameters>
            <label>LoopCounter Exceeds 99</label>
        </waitEvents>
    </waits>
</Flow>
